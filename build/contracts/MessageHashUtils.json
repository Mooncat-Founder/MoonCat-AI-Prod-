{
  "contractName": "MessageHashUtils",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}",
  "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d8eb1fe17d25b56e7233882f463ac13b5bdb87883c3077055533bcdb8e4b039d64736f6c634300081b0033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d8eb1fe17d25b56e7233882f463ac13b5bdb87883c3077055533bcdb8e4b039d64736f6c634300081b0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "521:3181:25:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;521:3181:25;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "521:3181:25:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n",
  "sourcePath": "@openzeppelin\\contracts\\utils\\cryptography\\MessageHashUtils.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol",
    "exportedSymbols": {
      "MessageHashUtils": [
        3931
      ],
      "Strings": [
        3282
      ]
    },
    "id": 3932,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3859,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "123:24:25"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
        "file": "../Strings.sol",
        "id": 3861,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3932,
        "sourceUnit": 3283,
        "src": "149:39:25",
        "symbolAliases": [
          {
            "foreign": {
              "id": 3860,
              "name": "Strings",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3282,
              "src": "157:7:25",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MessageHashUtils",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 3862,
          "nodeType": "StructuredDocumentation",
          "src": "190:330:25",
          "text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
        },
        "fullyImplemented": true,
        "id": 3931,
        "linearizedBaseContracts": [
          3931
        ],
        "name": "MessageHashUtils",
        "nameLocation": "529:16:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3871,
              "nodeType": "Block",
              "src": "1314:341:25",
              "statements": [
                {
                  "AST": {
                    "nativeSrc": "1349:300:25",
                    "nodeType": "YulBlock",
                    "src": "1349:300:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "1370:4:25",
                              "nodeType": "YulLiteral",
                              "src": "1370:4:25",
                              "type": "",
                              "value": "0x00"
                            },
                            {
                              "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                              "kind": "string",
                              "nativeSrc": "1376:34:25",
                              "nodeType": "YulLiteral",
                              "src": "1376:34:25",
                              "type": "",
                              "value": "\u0019Ethereum Signed Message:\n32"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nativeSrc": "1363:6:25",
                            "nodeType": "YulIdentifier",
                            "src": "1363:6:25"
                          },
                          "nativeSrc": "1363:48:25",
                          "nodeType": "YulFunctionCall",
                          "src": "1363:48:25"
                        },
                        "nativeSrc": "1363:48:25",
                        "nodeType": "YulExpressionStatement",
                        "src": "1363:48:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "1472:4:25",
                              "nodeType": "YulLiteral",
                              "src": "1472:4:25",
                              "type": "",
                              "value": "0x1c"
                            },
                            {
                              "name": "messageHash",
                              "nativeSrc": "1478:11:25",
                              "nodeType": "YulIdentifier",
                              "src": "1478:11:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nativeSrc": "1465:6:25",
                            "nodeType": "YulIdentifier",
                            "src": "1465:6:25"
                          },
                          "nativeSrc": "1465:25:25",
                          "nodeType": "YulFunctionCall",
                          "src": "1465:25:25"
                        },
                        "nativeSrc": "1465:25:25",
                        "nodeType": "YulExpressionStatement",
                        "src": "1465:25:25"
                      },
                      {
                        "nativeSrc": "1544:31:25",
                        "nodeType": "YulAssignment",
                        "src": "1544:31:25",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "1564:4:25",
                              "nodeType": "YulLiteral",
                              "src": "1564:4:25",
                              "type": "",
                              "value": "0x00"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "1570:4:25",
                              "nodeType": "YulLiteral",
                              "src": "1570:4:25",
                              "type": "",
                              "value": "0x3c"
                            }
                          ],
                          "functionName": {
                            "name": "keccak256",
                            "nativeSrc": "1554:9:25",
                            "nodeType": "YulIdentifier",
                            "src": "1554:9:25"
                          },
                          "nativeSrc": "1554:21:25",
                          "nodeType": "YulFunctionCall",
                          "src": "1554:21:25"
                        },
                        "variableNames": [
                          {
                            "name": "digest",
                            "nativeSrc": "1544:6:25",
                            "nodeType": "YulIdentifier",
                            "src": "1544:6:25"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 3868,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1544:6:25",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3865,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1478:11:25",
                      "valueSize": 1
                    }
                  ],
                  "flags": [
                    "memory-safe"
                  ],
                  "id": 3870,
                  "nodeType": "InlineAssembly",
                  "src": "1324:325:25"
                }
              ]
            },
            "documentation": {
              "id": 3863,
              "nodeType": "StructuredDocumentation",
              "src": "552:665:25",
              "text": " @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
            },
            "id": 3872,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toEthSignedMessageHash",
            "nameLocation": "1231:22:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3865,
                  "mutability": "mutable",
                  "name": "messageHash",
                  "nameLocation": "1262:11:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3872,
                  "src": "1254:19:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3864,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1254:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1253:21:25"
            },
            "returnParameters": {
              "id": 3869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3868,
                  "mutability": "mutable",
                  "name": "digest",
                  "nameLocation": "1306:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3872,
                  "src": "1298:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3867,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1298:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1297:16:25"
            },
            "scope": 3931,
            "src": "1222:433:25",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3897,
              "nodeType": "Block",
              "src": "2207:143:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
                            "id": 3884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2259:32:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
                            },
                            "value": "\u0019Ethereum Signed Message:\n"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 3889,
                                      "name": "message",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3875,
                                      "src": "2316:7:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 3890,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2324:6:25",
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "2316:14:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 3887,
                                    "name": "Strings",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3282,
                                    "src": "2299:7:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Strings_$3282_$",
                                      "typeString": "type(library Strings)"
                                    }
                                  },
                                  "id": 3888,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2307:8:25",
                                  "memberName": "toString",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3030,
                                  "src": "2299:16:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (string memory)"
                                  }
                                },
                                "id": 3891,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2299:32:25",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 3886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2293:5:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 3885,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "2293:5:25",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2293:39:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "id": 3893,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3875,
                            "src": "2334:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
                              "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 3882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2246:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 3881,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2246:5:25",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2252:6:25",
                          "memberName": "concat",
                          "nodeType": "MemberAccess",
                          "src": "2246:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2246:96:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3880,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "2236:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 3895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2236:107:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 3879,
                  "id": 3896,
                  "nodeType": "Return",
                  "src": "2217:126:25"
                }
              ]
            },
            "documentation": {
              "id": 3873,
              "nodeType": "StructuredDocumentation",
              "src": "1661:455:25",
              "text": " @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
            },
            "id": 3898,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toEthSignedMessageHash",
            "nameLocation": "2130:22:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3875,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "2166:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3898,
                  "src": "2153:20:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3874,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2153:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2152:22:25"
            },
            "returnParameters": {
              "id": 3879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3878,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3898,
                  "src": "2198:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3877,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2198:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2197:9:25"
            },
            "scope": 3931,
            "src": "2121:229:25",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3917,
              "nodeType": "Block",
              "src": "2804:80:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1900",
                            "id": 3911,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "hexString",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2848:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
                              "typeString": "literal_string hex\"1900\""
                            },
                            "value": "\u0019\u0000"
                          },
                          {
                            "id": 3912,
                            "name": "validator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3901,
                            "src": "2860:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 3913,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3903,
                            "src": "2871:4:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
                              "typeString": "literal_string hex\"1900\""
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 3909,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "2831:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 3910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2835:12:25",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2831:16:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 3914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2831:45:25",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3908,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "2821:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 3915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2821:56:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 3907,
                  "id": 3916,
                  "nodeType": "Return",
                  "src": "2814:63:25"
                }
              ]
            },
            "documentation": {
              "id": 3899,
              "nodeType": "StructuredDocumentation",
              "src": "2356:332:25",
              "text": " @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
            },
            "id": 3918,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toDataWithIntendedValidatorHash",
            "nameLocation": "2702:31:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3901,
                  "mutability": "mutable",
                  "name": "validator",
                  "nameLocation": "2742:9:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3918,
                  "src": "2734:17:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3900,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2734:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3903,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2766:4:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3918,
                  "src": "2753:17:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3902,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2753:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2733:38:25"
            },
            "returnParameters": {
              "id": 3907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3906,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3918,
                  "src": "2795:7:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3905,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2795:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2794:9:25"
            },
            "scope": 3931,
            "src": "2693:191:25",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3929,
              "nodeType": "Block",
              "src": "3435:265:25",
              "statements": [
                {
                  "AST": {
                    "nativeSrc": "3470:224:25",
                    "nodeType": "YulBlock",
                    "src": "3470:224:25",
                    "statements": [
                      {
                        "nativeSrc": "3484:22:25",
                        "nodeType": "YulVariableDeclaration",
                        "src": "3484:22:25",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "3501:4:25",
                              "nodeType": "YulLiteral",
                              "src": "3501:4:25",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nativeSrc": "3495:5:25",
                            "nodeType": "YulIdentifier",
                            "src": "3495:5:25"
                          },
                          "nativeSrc": "3495:11:25",
                          "nodeType": "YulFunctionCall",
                          "src": "3495:11:25"
                        },
                        "variables": [
                          {
                            "name": "ptr",
                            "nativeSrc": "3488:3:25",
                            "nodeType": "YulTypedName",
                            "src": "3488:3:25",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nativeSrc": "3526:3:25",
                              "nodeType": "YulIdentifier",
                              "src": "3526:3:25"
                            },
                            {
                              "hexValue": "1901",
                              "kind": "string",
                              "nativeSrc": "3531:10:25",
                              "nodeType": "YulLiteral",
                              "src": "3531:10:25",
                              "type": "",
                              "value": "\u0019\u0001"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nativeSrc": "3519:6:25",
                            "nodeType": "YulIdentifier",
                            "src": "3519:6:25"
                          },
                          "nativeSrc": "3519:23:25",
                          "nodeType": "YulFunctionCall",
                          "src": "3519:23:25"
                        },
                        "nativeSrc": "3519:23:25",
                        "nodeType": "YulExpressionStatement",
                        "src": "3519:23:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "ptr",
                                  "nativeSrc": "3566:3:25",
                                  "nodeType": "YulIdentifier",
                                  "src": "3566:3:25"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "3571:4:25",
                                  "nodeType": "YulLiteral",
                                  "src": "3571:4:25",
                                  "type": "",
                                  "value": "0x02"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "3562:3:25",
                                "nodeType": "YulIdentifier",
                                "src": "3562:3:25"
                              },
                              "nativeSrc": "3562:14:25",
                              "nodeType": "YulFunctionCall",
                              "src": "3562:14:25"
                            },
                            {
                              "name": "domainSeparator",
                              "nativeSrc": "3578:15:25",
                              "nodeType": "YulIdentifier",
                              "src": "3578:15:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nativeSrc": "3555:6:25",
                            "nodeType": "YulIdentifier",
                            "src": "3555:6:25"
                          },
                          "nativeSrc": "3555:39:25",
                          "nodeType": "YulFunctionCall",
                          "src": "3555:39:25"
                        },
                        "nativeSrc": "3555:39:25",
                        "nodeType": "YulExpressionStatement",
                        "src": "3555:39:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "ptr",
                                  "nativeSrc": "3618:3:25",
                                  "nodeType": "YulIdentifier",
                                  "src": "3618:3:25"
                                },
                                {
                                  "kind": "number",
                                  "nativeSrc": "3623:4:25",
                                  "nodeType": "YulLiteral",
                                  "src": "3623:4:25",
                                  "type": "",
                                  "value": "0x22"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "3614:3:25",
                                "nodeType": "YulIdentifier",
                                "src": "3614:3:25"
                              },
                              "nativeSrc": "3614:14:25",
                              "nodeType": "YulFunctionCall",
                              "src": "3614:14:25"
                            },
                            {
                              "name": "structHash",
                              "nativeSrc": "3630:10:25",
                              "nodeType": "YulIdentifier",
                              "src": "3630:10:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nativeSrc": "3607:6:25",
                            "nodeType": "YulIdentifier",
                            "src": "3607:6:25"
                          },
                          "nativeSrc": "3607:34:25",
                          "nodeType": "YulFunctionCall",
                          "src": "3607:34:25"
                        },
                        "nativeSrc": "3607:34:25",
                        "nodeType": "YulExpressionStatement",
                        "src": "3607:34:25"
                      },
                      {
                        "nativeSrc": "3654:30:25",
                        "nodeType": "YulAssignment",
                        "src": "3654:30:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "ptr",
                              "nativeSrc": "3674:3:25",
                              "nodeType": "YulIdentifier",
                              "src": "3674:3:25"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "3679:4:25",
                              "nodeType": "YulLiteral",
                              "src": "3679:4:25",
                              "type": "",
                              "value": "0x42"
                            }
                          ],
                          "functionName": {
                            "name": "keccak256",
                            "nativeSrc": "3664:9:25",
                            "nodeType": "YulIdentifier",
                            "src": "3664:9:25"
                          },
                          "nativeSrc": "3664:20:25",
                          "nodeType": "YulFunctionCall",
                          "src": "3664:20:25"
                        },
                        "variableNames": [
                          {
                            "name": "digest",
                            "nativeSrc": "3654:6:25",
                            "nodeType": "YulIdentifier",
                            "src": "3654:6:25"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 3926,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3654:6:25",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3921,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3578:15:25",
                      "valueSize": 1
                    },
                    {
                      "declaration": 3923,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3630:10:25",
                      "valueSize": 1
                    }
                  ],
                  "flags": [
                    "memory-safe"
                  ],
                  "id": 3928,
                  "nodeType": "InlineAssembly",
                  "src": "3445:249:25"
                }
              ]
            },
            "documentation": {
              "id": 3919,
              "nodeType": "StructuredDocumentation",
              "src": "2890:431:25",
              "text": " @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
            },
            "id": 3930,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toTypedDataHash",
            "nameLocation": "3335:15:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3921,
                  "mutability": "mutable",
                  "name": "domainSeparator",
                  "nameLocation": "3359:15:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3930,
                  "src": "3351:23:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3920,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3351:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3923,
                  "mutability": "mutable",
                  "name": "structHash",
                  "nameLocation": "3384:10:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3930,
                  "src": "3376:18:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3922,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3376:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3350:45:25"
            },
            "returnParameters": {
              "id": 3927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3926,
                  "mutability": "mutable",
                  "name": "digest",
                  "nameLocation": "3427:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3930,
                  "src": "3419:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 3925,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3419:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3418:16:25"
            },
            "scope": 3931,
            "src": "3326:374:25",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 3932,
        "src": "521:3181:25",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "123:3580:25"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.27+commit.40a35a09.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-10-25T03:48:59.899Z",
  "devdoc": {
    "details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}